{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Surprise! Not a 404!!! \u00b6 I always get frustrated when I paste a helm repository URL into my browser and I get a 404. Hopefully, you'll find this useful. Warning I really do not know what I'm doing. Use at your own risk. The helm charts! \u00b6 Select a chart from the list below to view installation instructions, features, release notes, etc... Chart Description Current App Version Current Chart Version homer This one works and doesn't require the k8s-at-home common.yaml. A dead simple static HOMe for your servER to keep your services on hand from a simple yaml config. 22.11.1 0.1.10","title":"Home"},{"location":"#surprise-not-a-404","text":"I always get frustrated when I paste a helm repository URL into my browser and I get a 404. Hopefully, you'll find this useful. Warning I really do not know what I'm doing. Use at your own risk.","title":"Surprise! Not a 404!!!"},{"location":"#the-helm-charts","text":"Select a chart from the list below to view installation instructions, features, release notes, etc... Chart Description Current App Version Current Chart Version homer This one works and doesn't require the k8s-at-home common.yaml. A dead simple static HOMe for your servER to keep your services on hand from a simple yaml config. 22.11.1 0.1.10","title":"The helm charts!"},{"location":"homer/","text":"Introduction \u00b6 The main reason I created this homer helm chart is because the k8s-at-home version of the helm chart was removed when k8s-at-home shut down . There are a few other homer helm charts on artifact hub, but they either don\u2019t work, or they\u2019re trying their best to make k8s-at-home chart work again. I don\u2019t want my chart to rely on the k8s-at-home common.yaml file. I want my homer helm chart to not have any external dependencies, and I want it to be based on a helm create homer starting point. Latest Release \u00b6 This one works and doesn't require the k8s-at-home common.yaml. A dead simple static HOMe for your servER to keep your services on hand from a simple yaml config. Command line As a sub chart Add the alexdresko helm repository 1 helm repo add alexdresko https://alexdresko.github.io/helm-charts/ Install the helm chart 1 2 3 4 5 helm install my-homer alexdresko/homer --version 0 .1.10 // OR.... helm update --install my-homer alexdresko/homer --version 0 .1.10 Add this to your chart.yaml dependencies : - name : homer version : 0.1.10 repository : https://alexdresko.github.io/helm-charts/ # For more information: https://alexdresko.github.io/helm-charts/ You can also download homer-0.1.10.tgz directly using this link . Useful links \u00b6 bastienwirtz/homer: A very simple static homepage for your server. This is the GitHub repository for Homer and the docker image that runs it b4bz/homer - Docker Image | Docker Hub Here's the Docker image on the Docker Hub This Homer chart on Artifac HUB Features \u00b6 Based on helm create homer - I think all charts should begin with helm create <chart name> . I like it when a helm chart feels familiar and I can rely on my existing knowledge gained from charts that have a similar values structure. Proof that it works - This helm chart was written inside a VS Code Dev Container that hosts a k8s cluster. The package.json file includes a number of scripts for manipulating various demos of the helm chart. Once inside the dev container, you can easily experiment with the chart and quickly see the results. This is how I know that the chart actually works, and it's a great way to let others play with the chart before implementing it in their own cluster. For additional features, see the Configuration section. Configuration \u00b6 This chart started by running helm create homer , so all of the standard features are available (although I have not tested all of them). Below is a list of the custom features I've added. For a complete list of supported values, see the values.yaml file . .Values.config makes it super easy to provide a basic homer configuration. You can simply put your configuration here, and it will \"just work\". .Values.ingress.auto allows for automatically creating a useful ingress resource that looks like - .localtest.me. For example, advanced-dashboard.localtest.me, where \"advanced\" is the helm release name, \"dashboard\" is specified as the friendlyName, and localtest.me is the domain. .Values.ingress.auto.enabled (default: false) enables or disables the auto ingress feature .Values.ingress.auto.domain (default: \"localtest.me\") specifies the domain to use. By default, \"localtest.me\" is used to make accessing the service easier locally. .localtest.me will resolve to 127.0.01. This does require an internet connection, but it only uses the internet to resolve the hostname to 127.0.0.1. It does not transmit data over the internet. .Values.ingress.auto.friendlyName (default: \"homer\") optionally overrides the value returned from the fullname helper. This only affects the URL that is generated, which is why I didn't use fullnameOverride or nameOverride. The advanced demo sets friendlyName to \"dashboard\", and you can see the result below: .Values.customConfigMap.enabled prevents .Values.config from being used, and allows you to create your own, more dynamic configMap. true , tells the the chart to look for a configmap with a name that is based on the result of { { .Release.Name }}-homer-custom . When you install homer, the NOTES.txt file will spit output the very specific name that the chart is looking for. You can also look at the advanced demo for an example of how to use this feature. The advanced demo includes an example configMap. Previous releases \u00b6 Here are the 5 most recent releases: Chart Description Current App Version Current Chart Version homer This one works and doesn't require the k8s-at-home common.yaml. A dead simple static HOMe for your servER to keep your services on hand from a simple yaml config. 22.11.1 0.1.10 homer Works and doesn't require the k8s-at-home common.yaml. A dead simple static HOMe for your servER to keep your services on hand from a simple yaml config. 22.10.2 0.1.3 homer A Helm chart for Kubernetes 1.17.2 0.1.2 homer A Helm chart for Kubernetes 1.16.1 0.1.1","title":"Homer"},{"location":"homer/#introduction","text":"The main reason I created this homer helm chart is because the k8s-at-home version of the helm chart was removed when k8s-at-home shut down . There are a few other homer helm charts on artifact hub, but they either don\u2019t work, or they\u2019re trying their best to make k8s-at-home chart work again. I don\u2019t want my chart to rely on the k8s-at-home common.yaml file. I want my homer helm chart to not have any external dependencies, and I want it to be based on a helm create homer starting point.","title":"Introduction"},{"location":"homer/#latest-release","text":"This one works and doesn't require the k8s-at-home common.yaml. A dead simple static HOMe for your servER to keep your services on hand from a simple yaml config. Command line As a sub chart Add the alexdresko helm repository 1 helm repo add alexdresko https://alexdresko.github.io/helm-charts/ Install the helm chart 1 2 3 4 5 helm install my-homer alexdresko/homer --version 0 .1.10 // OR.... helm update --install my-homer alexdresko/homer --version 0 .1.10 Add this to your chart.yaml dependencies : - name : homer version : 0.1.10 repository : https://alexdresko.github.io/helm-charts/ # For more information: https://alexdresko.github.io/helm-charts/ You can also download homer-0.1.10.tgz directly using this link .","title":"Latest Release"},{"location":"homer/#useful-links","text":"bastienwirtz/homer: A very simple static homepage for your server. This is the GitHub repository for Homer and the docker image that runs it b4bz/homer - Docker Image | Docker Hub Here's the Docker image on the Docker Hub This Homer chart on Artifac HUB","title":"Useful links"},{"location":"homer/#features","text":"Based on helm create homer - I think all charts should begin with helm create <chart name> . I like it when a helm chart feels familiar and I can rely on my existing knowledge gained from charts that have a similar values structure. Proof that it works - This helm chart was written inside a VS Code Dev Container that hosts a k8s cluster. The package.json file includes a number of scripts for manipulating various demos of the helm chart. Once inside the dev container, you can easily experiment with the chart and quickly see the results. This is how I know that the chart actually works, and it's a great way to let others play with the chart before implementing it in their own cluster. For additional features, see the Configuration section.","title":"Features"},{"location":"homer/#configuration","text":"This chart started by running helm create homer , so all of the standard features are available (although I have not tested all of them). Below is a list of the custom features I've added. For a complete list of supported values, see the values.yaml file . .Values.config makes it super easy to provide a basic homer configuration. You can simply put your configuration here, and it will \"just work\". .Values.ingress.auto allows for automatically creating a useful ingress resource that looks like - .localtest.me. For example, advanced-dashboard.localtest.me, where \"advanced\" is the helm release name, \"dashboard\" is specified as the friendlyName, and localtest.me is the domain. .Values.ingress.auto.enabled (default: false) enables or disables the auto ingress feature .Values.ingress.auto.domain (default: \"localtest.me\") specifies the domain to use. By default, \"localtest.me\" is used to make accessing the service easier locally. .localtest.me will resolve to 127.0.01. This does require an internet connection, but it only uses the internet to resolve the hostname to 127.0.0.1. It does not transmit data over the internet. .Values.ingress.auto.friendlyName (default: \"homer\") optionally overrides the value returned from the fullname helper. This only affects the URL that is generated, which is why I didn't use fullnameOverride or nameOverride. The advanced demo sets friendlyName to \"dashboard\", and you can see the result below: .Values.customConfigMap.enabled prevents .Values.config from being used, and allows you to create your own, more dynamic configMap. true , tells the the chart to look for a configmap with a name that is based on the result of { { .Release.Name }}-homer-custom . When you install homer, the NOTES.txt file will spit output the very specific name that the chart is looking for. You can also look at the advanced demo for an example of how to use this feature. The advanced demo includes an example configMap.","title":"Configuration"},{"location":"homer/#previous-releases","text":"Here are the 5 most recent releases: Chart Description Current App Version Current Chart Version homer This one works and doesn't require the k8s-at-home common.yaml. A dead simple static HOMe for your servER to keep your services on hand from a simple yaml config. 22.11.1 0.1.10 homer Works and doesn't require the k8s-at-home common.yaml. A dead simple static HOMe for your servER to keep your services on hand from a simple yaml config. 22.10.2 0.1.3 homer A Helm chart for Kubernetes 1.17.2 0.1.2 homer A Helm chart for Kubernetes 1.16.1 0.1.1","title":"Previous releases"},{"location":"how/","text":"Here's how I did it \u00b6 I did some googling and couldn't find what I was looking for. Mkdocs + Material seemed to be able to support what I wanted to do, but I had never used either before. Turns out, it's pretty cool. So I told mkdocs to parse the index.yaml and spit out all of the charts and versions supported by the repostory URL. The site is generated automatically every time I release a new chart, so it's always up to date. It's kind of like a mini https://artifacthub.io. Try it yourself \u00b6 If you have the VS Code Dev Containers extension, you can open the repo in the dev container and immediately use the npm package.json scripts to manage the site. Then just commit+push, and the site is live. Also, I really love Dev Containers. Here's what the workflow looks like (This is just me playing again, his time with mermaid charts ) graph TD A[Open the repo as a Dev Container] --> C[Open browser to http://127.0.0.1:8000/helm-charts]; C --> D[Make changes] --> E[Test changes] --> F{Done?} -->|Yes| G[commit and push] --> I[Verify everything looks good and works in Github] F -->|No| D","title":"How did I do this?"},{"location":"how/#heres-how-i-did-it","text":"I did some googling and couldn't find what I was looking for. Mkdocs + Material seemed to be able to support what I wanted to do, but I had never used either before. Turns out, it's pretty cool. So I told mkdocs to parse the index.yaml and spit out all of the charts and versions supported by the repostory URL. The site is generated automatically every time I release a new chart, so it's always up to date. It's kind of like a mini https://artifacthub.io.","title":"Here's how I did it"},{"location":"how/#try-it-yourself","text":"If you have the VS Code Dev Containers extension, you can open the repo in the dev container and immediately use the npm package.json scripts to manage the site. Then just commit+push, and the site is live. Also, I really love Dev Containers. Here's what the workflow looks like (This is just me playing again, his time with mermaid charts ) graph TD A[Open the repo as a Dev Container] --> C[Open browser to http://127.0.0.1:8000/helm-charts]; C --> D[Make changes] --> E[Test changes] --> F{Done?} -->|Yes| G[commit and push] --> I[Verify everything looks good and works in Github] F -->|No| D","title":"Try it yourself"},{"location":"index_yaml/","text":"Here's the index.yaml file you were looking for \u00b6 Honestly, at this point, I'm just having fun with mkdocs+material. But maybe someone will appreciate this. The code below is pulled directly from index.yaml, so it's the same thing that helm sees. index.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 apiVersion: v1 entries: homer: - annotations: artifacthub.io/links: | - name: Github repository for this helm chart url: https://alexdresko.github.io/helm-charts - name: Docker container used by this helm chart url: https://hub.docker.com/r/b4bz/homer - name: Github repository for homer url: https://github.com/bastienwirtz/homer artifacthub.io/maintainers: | - name: Alex Dresko email: me@alexdresko.com artifacthub.io/screenshots: \"- title: Homer running via this helm chart\\n url: https://alexdresko.github.io/helm-charts/img/homer_dashboard.png\\n- title: A helm repo that is actually useful! \\n url: https://alexdresko.github.io/helm-charts/img/homer_dashboard.png\\n\" apiVersion: v2 appVersion: 22.11.1 created: \"2022-11-27T22:58:37.55904637Z\" description: This one works and doesn't require the k8s-at-home common.yaml. A dead simple static HOMe for your servER to keep your services on hand from a simple yaml config. digest: 21293155c272ac29caba9edbaddb85ec496457485fb878824907749306113933 icon: https://raw.githubusercontent.com/bastienwirtz/homer/5418c6291a39d27aeee471673adba742080e1ccb/public/logo.png name: homer type: application urls: - https://alexdresko.github.io/helm-charts/homer-0.1.10.tgz version: 0.1.10 - apiVersion: v2 appVersion: 22.10.2 created: \"2022-11-27T22:58:37.560073185Z\" description: Works and doesn't require the k8s-at-home common.yaml. A dead simple static HOMe for your servER to keep your services on hand from a simple yaml config. digest: a0cbfec72f1b15997baf4afac19da85290abe0723a4cddec52372123448c5e9c name: homer type: application urls: - https://alexdresko.github.io/helm-charts/homer-0.1.3.tgz version: 0.1.3 - apiVersion: v2 appVersion: 1.17.2 created: \"2022-11-27T22:58:37.559514477Z\" description: A Helm chart for Kubernetes digest: f51b8e06e2719b645864d5b97b91753b85e36c1bf30537a6bad31f1156774d14 name: homer type: application urls: - https://alexdresko.github.io/helm-charts/homer-0.1.2.tgz version: 0.1.2 - apiVersion: v2 appVersion: 1.16.1 created: \"2022-11-27T22:58:37.558320259Z\" description: A Helm chart for Kubernetes digest: 14c2aa6ca5cfc319a0c8626b3a4a2dec626e12aef01ee134ba9908faac5cafa5 name: homer type: application urls: - https://alexdresko.github.io/helm-charts/homer-0.1.1.tgz version: 0.1.1 generated: \"2022-11-27T22:58:37.55767175Z\" You can also view the file directly here","title":"The index.yaml file"},{"location":"index_yaml/#heres-the-indexyaml-file-you-were-looking-for","text":"Honestly, at this point, I'm just having fun with mkdocs+material. But maybe someone will appreciate this. The code below is pulled directly from index.yaml, so it's the same thing that helm sees. index.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 apiVersion: v1 entries: homer: - annotations: artifacthub.io/links: | - name: Github repository for this helm chart url: https://alexdresko.github.io/helm-charts - name: Docker container used by this helm chart url: https://hub.docker.com/r/b4bz/homer - name: Github repository for homer url: https://github.com/bastienwirtz/homer artifacthub.io/maintainers: | - name: Alex Dresko email: me@alexdresko.com artifacthub.io/screenshots: \"- title: Homer running via this helm chart\\n url: https://alexdresko.github.io/helm-charts/img/homer_dashboard.png\\n- title: A helm repo that is actually useful! \\n url: https://alexdresko.github.io/helm-charts/img/homer_dashboard.png\\n\" apiVersion: v2 appVersion: 22.11.1 created: \"2022-11-27T22:58:37.55904637Z\" description: This one works and doesn't require the k8s-at-home common.yaml. A dead simple static HOMe for your servER to keep your services on hand from a simple yaml config. digest: 21293155c272ac29caba9edbaddb85ec496457485fb878824907749306113933 icon: https://raw.githubusercontent.com/bastienwirtz/homer/5418c6291a39d27aeee471673adba742080e1ccb/public/logo.png name: homer type: application urls: - https://alexdresko.github.io/helm-charts/homer-0.1.10.tgz version: 0.1.10 - apiVersion: v2 appVersion: 22.10.2 created: \"2022-11-27T22:58:37.560073185Z\" description: Works and doesn't require the k8s-at-home common.yaml. A dead simple static HOMe for your servER to keep your services on hand from a simple yaml config. digest: a0cbfec72f1b15997baf4afac19da85290abe0723a4cddec52372123448c5e9c name: homer type: application urls: - https://alexdresko.github.io/helm-charts/homer-0.1.3.tgz version: 0.1.3 - apiVersion: v2 appVersion: 1.17.2 created: \"2022-11-27T22:58:37.559514477Z\" description: A Helm chart for Kubernetes digest: f51b8e06e2719b645864d5b97b91753b85e36c1bf30537a6bad31f1156774d14 name: homer type: application urls: - https://alexdresko.github.io/helm-charts/homer-0.1.2.tgz version: 0.1.2 - apiVersion: v2 appVersion: 1.16.1 created: \"2022-11-27T22:58:37.558320259Z\" description: A Helm chart for Kubernetes digest: 14c2aa6ca5cfc319a0c8626b3a4a2dec626e12aef01ee134ba9908faac5cafa5 name: homer type: application urls: - https://alexdresko.github.io/helm-charts/homer-0.1.1.tgz version: 0.1.1 generated: \"2022-11-27T22:58:37.55767175Z\" You can also view the file directly here","title":"Here's the index.yaml file you were looking for"},{"location":"roadmap/","text":"What lies ahead? \u00b6 I don't know. This is just a weekend project. Record a demo to show how to open the repo in a VS Code Dev Container, and showcase some of the things you can do with that. Convert this all into a thing that other people can use to surface their own charts. There's obviously some overlap between what I've done and helm-docs . I like the \"auto-detection of field descriptions from comments\" feature of helm-docs Add datree? I don't even know if that makes sense. I think it would be cool if I had a github action that would kick off when depedent docker images and helm charts were updated, and then automatically update those depedencies in my charts. This should produce beta/canary helm charts for people who want the latest and greatest, but I think I still need to manually promote dependencies after testing. It's possible that the github CI builds could install and test the helm charts before allowing them to be published. I'd like for each release to include release notes. I don't know if I want to auto-generate them from commits ( ? or ? ), or if I want to create them manually.","title":"Roadmap"},{"location":"roadmap/#what-lies-ahead","text":"I don't know. This is just a weekend project. Record a demo to show how to open the repo in a VS Code Dev Container, and showcase some of the things you can do with that. Convert this all into a thing that other people can use to surface their own charts. There's obviously some overlap between what I've done and helm-docs . I like the \"auto-detection of field descriptions from comments\" feature of helm-docs Add datree? I don't even know if that makes sense. I think it would be cool if I had a github action that would kick off when depedent docker images and helm charts were updated, and then automatically update those depedencies in my charts. This should produce beta/canary helm charts for people who want the latest and greatest, but I think I still need to manually promote dependencies after testing. It's possible that the github CI builds could install and test the helm charts before allowing them to be published. I'd like for each release to include release notes. I don't know if I want to auto-generate them from commits ( ? or ? ), or if I want to create them manually.","title":"What lies ahead?"}]}